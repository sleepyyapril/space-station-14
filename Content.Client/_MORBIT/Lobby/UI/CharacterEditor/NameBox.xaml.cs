using Content.Client.Humanoid;
using Content.Client.Lobby;
using Content.Client.Message;
using Content.Shared.CCVar;
using Content.Shared.Preferences;
using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.Utility;
using Robust.Shared.Configuration;
using Robust.Shared.Prototypes;

#pragma warning disable IDE1006
namespace Content.Client._MORBIT.Lobby.UI.CharacterEditor;
#pragma warning restore IDE1006

[GenerateTypedNameReferences]
public sealed partial class NameBox : BoxContainer
{
    [Dependency] private readonly IConfigurationManager _cfgManager = default!;

    public event Action<HumanoidCharacterProfile>? OnNameSet;
    public event Action? OnRandomizeEverything;

    /// <summary>
    /// The work in progress profile being edited.
    /// </summary>
    private HumanoidCharacterProfile? _profile;
    private int _maxNameLength;

    public NameBox()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _maxNameLength = _cfgManager.GetCVar(CCVars.MaxNameLength);

        NameEdit.OnTextChanged += args => { SetName(args.Text); };
        NameEdit.IsValid = args => args.Length <= _maxNameLength;
        NameRandomize.OnPressed += args => { RandomizeName(); };
        RandomizeEverythingButton.OnPressed += args => { RandomizeEverything(); };

        var namingRules = $"[color=red]{Loc.GetString("humanoid-profile-editor-naming-rules-warning")}[/color]";
        WarningLabel.SetMarkup(namingRules);
    }

    public void SetProfile(HumanoidCharacterProfile? profile)
    {
        _profile = profile;
        UpdateNameEdit();
    }

    private void UpdateNameEdit()
    {
        NameEdit.Text = _profile?.Name ?? "";
    }

    private void SetName(string newName)
    {
        if (_profile is null)
            return;

        _profile = _profile.WithName(newName);
        OnNameSet?.Invoke(_profile);
    }

    private void RandomizeEverything()
    {
        OnRandomizeEverything?.Invoke();
    }

    private void RandomizeName()
    {
        if (_profile == null) return;
        var name = HumanoidCharacterProfile.GetName(_profile.Species, _profile.Gender);
        NameEdit.SetText(name, invokeEvent: true);
    }
}
