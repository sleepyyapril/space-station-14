using System.Linq;
using Content.Client.Lobby;
using Content.Client.Players.PlayTimeTracking;
using Content.Shared.Guidebook;
using Content.Shared.Preferences;
using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

#pragma warning disable IDE1006
namespace Content.Client._MORBIT.Lobby.UI.CharacterEditor.Tabs;
#pragma warning restore IDE1006

[GenerateTypedNameReferences]
public sealed partial class ProfileEditorAntagsTab : BoxContainer
{
    [Dependency] private readonly IEntityManager _entManager = default!;
    [Dependency] private readonly IClientPreferencesManager _preferencesManager = default!;
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;
    [Dependency] private readonly JobRequirementsManager _requirements = default!;
    private readonly SharedRoleSystem _role;

    public event Action<HumanoidCharacterProfile?>? OnAntagsUpdated;
    public event Action<List<ProtoId<GuideEntryPrototype>>>? OnOpenGuidebook;

    /// <summary>
    /// The work in progress profile being edited.
    /// </summary>
    private HumanoidCharacterProfile? _profile;

    private const int YesOption = 0;
    private const int NoOption = 0;

    public ProfileEditorAntagsTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _role = _entManager.System<SharedRoleSystem>();
    }

    public void SetProfile(HumanoidCharacterProfile? profile)
    {
        _profile = profile;
        RefreshAntags();
    }

    public void RefreshAntags()
    {
        AntagList.DisposeAllChildren();

        var selectedProfile = (HumanoidCharacterProfile?)_preferencesManager.Preferences?.SelectedCharacter;
        var items = new[]
        {
            ("humanoid-profile-editor-antag-preference-yes-button", YesOption),
            ("humanoid-profile-editor-antag-preference-no-button", NoOption)
        };

        foreach (var antag in _prototypeManager.EnumeratePrototypes<AntagPrototype>()
            .OrderBy(a => Loc.GetString(a.Name)))
        {
            if (!antag.SetPreference)
                continue;

            var prefButtons = new AntagPreferenceButtons(_requirements, _role);
            prefButtons.Setup(antag, items, selectedProfile, hasLoadout: false);
            prefButtons.Select(_profile?.AntagPreferences.Contains(antag.ID) == true ? YesOption : NoOption);

            prefButtons.OnOpenGuidebook += args => { OnOpenGuidebook?.Invoke(args); };
            prefButtons.OnPreferenceSelected += preference =>
            {
                _profile = _profile?.WithAntagPreference(antag.ID, preference == YesOption);
                OnAntagsUpdated?.Invoke(_profile);
            };

            AntagList.AddChild(prefButtons);
        }
    }
}
