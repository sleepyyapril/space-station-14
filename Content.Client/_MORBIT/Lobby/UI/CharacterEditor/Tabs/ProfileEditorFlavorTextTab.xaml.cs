using Content.Shared.Preferences;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

#pragma warning disable IDE1006
namespace Content.Client._MORBIT.Lobby.UI.CharacterEditor.Tabs;
#pragma warning restore IDE1006

[GenerateTypedNameReferences]
public sealed partial class ProfileEditorFlavorTextTab : BoxContainer
{
    public event Action<HumanoidCharacterProfile?>? OnFlavorTextChanged;

    /// <summary>
    /// The work in progress profile being edited.
    /// </summary>
    private HumanoidCharacterProfile? _profile;

    private bool _enabled = true;
    public bool Enabled
    {
        get => _enabled;
        set
        {
            var oldValue = _enabled;
            _enabled = value;

            if (_enabled != oldValue)
                RefreshFlavorText();
        }
    }

    public ProfileEditorFlavorTextTab()
    {
        RobustXamlLoader.Load(this);
        RefreshFlavorText();
    }

    public void SetProfile(HumanoidCharacterProfile? profile)
    {
        _profile = profile;
        UpdateFlavorTextEdit();
    }

    private void FlavorTextChanged(string content)
    {
        if (_profile is null)
            return;

        _profile = _profile.WithFlavorText(content);
        OnFlavorTextChanged?.Invoke(_profile);
    }

    private void UpdateFlavorTextEdit()
    {
        if (!Enabled)
            return;

        FlavorText.CFlavorTextInput.TextRope = new Rope.Leaf(_profile?.FlavorText ?? "");
    }

    private void RefreshFlavorText()
    {
        if (Enabled)
            FlavorText.OnFlavorTextChanged += FlavorTextChanged;
        else
            FlavorText.OnFlavorTextChanged -= FlavorTextChanged;
    }
}
